{"componentChunkName":"component---node-modules-gatsby-theme-chronoblog-src-templates-link-js","path":"/links/redux-is-half-pattern/","result":{"data":{"mdx":{"id":"e309640d-32c8-52b4-ac3f-783a7db91b03","excerpt":"By David K. Piano. Detailed explanation of why and how effects are essential to state-management process.","frontmatter":{"title":"Redux is half of a pattern","date":"2020-05-24T00:00:00.000Z","link":"https://dev.to/davidkpiano/redux-is-half-of-a-pattern-1-2-1hd7","tags":["link","code","actor-model"],"cover":null},"fields":{"slug":"/links/redux-is-half-pattern/"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Redux is half of a pattern\",\n  \"date\": \"2020-05-24T00:00:00.000Z\",\n  \"link\": \"https://dev.to/davidkpiano/redux-is-half-of-a-pattern-1-2-1hd7\",\n  \"tags\": [\"link\", \"code\", \"actor-model\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"By David K. Piano. Detailed explanation of why and how effects are essential to state-management process.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// state -> message -> newStateWithEffects\\nconst reducer = ...\\n// ...\\ncase 'FETCH':\\n  return {\\n    ...state,\\n\\n    // finite state\\n    status: 'loading',\\n\\n    // actions (effects) to execute\\n    actions: [\\n      { type: 'fetchUser', id: 42 }\\n    ]\\n  }\\n// ...\\n\\n// pretend the state came from a Redux React hook\\nconst { effects } = state;\\n\\nuseEffect(() => {\\n  effects.forEach(effect => {\\n    if (effect.type === 'fetchUser') {\\n      fetch(`/api/user/${effect.id}`)\\n        .then(res => res.json())\\n        .then(data => {\\n           dispatch({ type: 'RESOLVE', user: data });\\n        })\\n    }\\n    // ... etc. for other effect implementations\\n  });\\n}, [effects]);\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"e309640d-32c8-52b4-ac3f-783a7db91b03"}}}